<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>css on しずか</title>
    <link>https://chenwenwenwen.github.io/tags/css/</link>
    <description>Recent content in css on しずか</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hans</language>
    <lastBuildDate>Tue, 05 Jan 2021 14:47:51 +0800</lastBuildDate>
    
	<atom:link href="https://chenwenwenwen.github.io/tags/css/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>利用flex设置了弹性项目如何增大或缩小以适应其弹性容器中可用的空间</title>
      <link>https://chenwenwenwen.github.io/2021/%E5%88%A9%E7%94%A8flex%E8%AE%BE%E7%BD%AE%E4%BA%86%E5%BC%B9%E6%80%A7%E9%A1%B9%E7%9B%AE%E5%A6%82%E4%BD%95%E5%A2%9E%E5%A4%A7%E6%88%96%E7%BC%A9%E5%B0%8F%E4%BB%A5%E9%80%82%E5%BA%94%E5%85%B6%E5%BC%B9%E6%80%A7%E5%AE%B9%E5%99%A8%E4%B8%AD%E5%8F%AF%E7%94%A8%E7%9A%84%E7%A9%BA%E9%97%B4/</link>
      <pubDate>Tue, 05 Jan 2021 14:47:51 +0800</pubDate>
      
      <guid>https://chenwenwenwen.github.io/2021/%E5%88%A9%E7%94%A8flex%E8%AE%BE%E7%BD%AE%E4%BA%86%E5%BC%B9%E6%80%A7%E9%A1%B9%E7%9B%AE%E5%A6%82%E4%BD%95%E5%A2%9E%E5%A4%A7%E6%88%96%E7%BC%A9%E5%B0%8F%E4%BB%A5%E9%80%82%E5%BA%94%E5%85%B6%E5%BC%B9%E6%80%A7%E5%AE%B9%E5%99%A8%E4%B8%AD%E5%8F%AF%E7%94%A8%E7%9A%84%E7%A9%BA%E9%97%B4/</guid>
      <description>原理：利用flex属性，原本每个设置为1，当鼠标hover在上面时，改为flex：4撑大
效果：
html代码 &amp;lt;div class=&amp;#34;dz_index-gallery&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;dz_index-gallery-wrapper&amp;#34;&amp;gt; &amp;lt;!-- 重复模块 --&amp;gt; &amp;lt;div class=&amp;#34;dz_index-gallery-list&amp;#34; style=&amp;#34;background-color: skyblue;&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;caption-cont&amp;#34;&amp;gt; &amp;lt;h4 class=&amp;#34;title&amp;#34;&amp;gt;123&amp;lt;/h4&amp;gt; &amp;lt;p class=&amp;#34;intro&amp;#34;&amp;gt;test1&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;!--end--&amp;gt; &amp;lt;div class=&amp;#34;dz_index-gallery-list&amp;#34; style=&amp;#34;background-color: yellow;&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;caption-cont&amp;#34;&amp;gt; &amp;lt;h4 class=&amp;#34;title&amp;#34;&amp;gt;231&amp;lt;/h4&amp;gt; &amp;lt;p class=&amp;#34;intro&amp;#34;&amp;gt;test2&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;dz_index-gallery-list&amp;#34; style=&amp;#34;background-color:pink;&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;caption-cont&amp;#34;&amp;gt; &amp;lt;h4 class=&amp;#34;title&amp;#34;&amp;gt;9999&amp;lt;/h4&amp;gt; &amp;lt;p class=&amp;#34;intro&amp;#34;&amp;gt;test3&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;dz_index-gallery-list&amp;#34; style=&amp;#34;background-color:green;&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;caption-cont&amp;#34;&amp;gt; &amp;lt;h4 class=&amp;#34;title&amp;#34;&amp;gt;3333&amp;lt;/h4&amp;gt; &amp;lt;p class=&amp;#34;intro&amp;#34;&amp;gt;test4&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; css代码 &amp;lt;style&amp;gt; .dz_index-gallery { width: 100%; box-sizing: border-box; overflow: hidden; padding: 30px 0; } .</description>
    </item>
    
    <item>
      <title>2048游戏制作</title>
      <link>https://chenwenwenwen.github.io/2020/2048/</link>
      <pubDate>Wed, 15 Jul 2020 10:44:00 +0800</pubDate>
      
      <guid>https://chenwenwenwen.github.io/2020/2048/</guid>
      <description>游戏实现：开始游戏 代码
一、游戏架构设定  UI-HTML、CSS 游戏逻辑-Js、Jquery 游戏数据 动画效果逻辑-js/jquery 支撑逻辑-js  项目目录 css-2048.cssjs-jquery-1.8.2.min.js	main2048.js	showanimation2048.js	support2048.jsindex.html游戏基础设定 通过键盘上下左右进行移动，当界面不可再移动的时候设定为Game over
二、构建页面元素 ​	头部显示游戏名、重新开始游戏按钮、分数
&amp;lt;header&amp;gt;	&amp;lt;h1&amp;gt;2048&amp;lt;/h1&amp;gt;	&amp;lt;a href=&amp;#34;javascript:newgame();&amp;#34; id=&amp;#34;newgamebutton&amp;#34;&amp;gt;New Game&amp;lt;/a&amp;gt;	&amp;lt;p&amp;gt;score:&amp;lt;span id=&amp;#34;score&amp;#34;&amp;gt;0&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;/header&amp;gt;​	整个格子宽高总共为500px，每个小格子宽高为100px，每个小格子之间的间隔20px。
&amp;lt;!--小格子--&amp;gt;	&amp;lt;div id=&amp;#34;grid-container&amp;#34;&amp;gt;	//一行为例	&amp;lt;div class=&amp;#34;grid-cell&amp;#34; id=&amp;#34;grid-cell-0-0&amp;#34;&amp;gt;&amp;lt;/div&amp;gt;	&amp;lt;div class=&amp;#34;grid-cell&amp;#34; id=&amp;#34;grid-cell-0-1&amp;#34;&amp;gt;&amp;lt;/div&amp;gt;	&amp;lt;div class=&amp;#34;grid-cell&amp;#34; id=&amp;#34;grid-cell-0-2&amp;#34;&amp;gt;&amp;lt;/div&amp;gt;	&amp;lt;div class=&amp;#34;grid-cell&amp;#34; id=&amp;#34;grid-cell-0-3&amp;#34;&amp;gt;&amp;lt;/div&amp;gt;	&amp;lt;/div&amp;gt;三、游戏逻辑 board 就相当于全部小格子的二维数组 ，存放的是格子的内容
hasConflicted记录是否发生过一个add
board 、hasConflicted数组初始化为一维数组&amp;mdash;&amp;mdash;-&amp;gt;在初始化的时候需要变成二维数组
var board = new Array()var score = 0 //分数初始化为0var hasConflicted = new Array();把移动的模块设置为number-cell-i-jde 小格子，把文字内容存放在board数组，通过updateBoardView()函数去控制显示到number-cell格子
游戏结束：当游戏没有空格且没有游戏空间的时候
四、游戏逻辑交互 以向左移动为例子
首先判断能否向左移动：&amp;mdash;&amp;gt;函数canMoveLeft()实现判断</description>
    </item>
    
  </channel>
</rss>