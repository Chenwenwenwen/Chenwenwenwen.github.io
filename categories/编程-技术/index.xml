<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>编程 · 技术 on しずか</title>
    <link>https://chenwenwenwen.github.io/categories/%E7%BC%96%E7%A8%8B-%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 编程 · 技术 on しずか</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hans</language>
    <lastBuildDate>Wed, 22 Jul 2020 14:20:27 +0800</lastBuildDate>
    
	<atom:link href="https://chenwenwenwen.github.io/categories/%E7%BC%96%E7%A8%8B-%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Http网络协议</title>
      <link>https://chenwenwenwen.github.io/2020/http%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Wed, 22 Jul 2020 14:20:27 +0800</pubDate>
      
      <guid>https://chenwenwenwen.github.io/2020/http%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/</guid>
      <description>一、了解Web和网络基础 Web是建立在Http协议上通信的。
TCP/IP协议：
   应用层 传输层 网络层（网络互联层） 链路层（数据链路层、网络接口层）     向用户提供应用服务时通信的活动。 对应用层提供处于两台计算机之间的数据传输 处理在网络上流动的数据包。数据包是网络传输的最小单位。 处理连接网络的硬件部分。   TCP/IP协议族内预存了各类通用的应用服务，比如FTP(文件传输协议)和DNS（域名系统）服务就是其中两类。 两个不同性质的协议: TCP（传输控制协议）和UDP(用户数据报协议) 规定了通过怎么样的路径（所谓的传输路线）到达对方的电脑，把数据包传给对方    HTTP协议也处于这层  作用就是在众多选项内选择一条传输路线。     TCP/IP通信传输流
与HTTP关系密切的协议：IP、TCP和DNS 一、负责传输的IP协议   IP网际协议位于网络层，作用是把各种数据包传送给对方。
  确保确实传送到对方需要满足各类条件，其中两个重要条件是IP地址和MAC地址。
  IP地址：指明了节点被分配的地址， MAC地址：指网卡所属的固定地址。
  IP地址可以和MAC地址进行配对。
  IP地址可变换，但MAC地址基本上不会更改。
  使用ARP协议凭借MAC地址进行通信：
  ARP地址是一种用以解析地址的协议，根据通信方的IP地址就可以反查出对应的MAC地址。
  二、确保可靠性的TCP协议 TCP属于传输层，提供可靠的字节流服务。
字节流服务：为了方便传输，将大块数据分割成以报文段为单位的数据包进行管理。
确保数据能够到达目标
为了让数据准确无误的到达目标，采用三次握手策略
TCP的标志：SYN和ACK
1.发送带有SYN标志数据包给对方
2.对方收到后，回复一个带SYN/ACK标志的包以表达确认信息
3.最后发送一个带有ACK的包，表示&amp;quot;握手&amp;quot;结束</description>
    </item>
    
    <item>
      <title>Sql注入基础原理</title>
      <link>https://chenwenwenwen.github.io/2020/sql%E6%B3%A8%E5%85%A5/</link>
      <pubDate>Fri, 03 Jul 2020 10:27:49 +0800</pubDate>
      
      <guid>https://chenwenwenwen.github.io/2020/sql%E6%B3%A8%E5%85%A5/</guid>
      <description>一、Sql注入简介 ​	Sql注入攻击是通过恶意的Sql查询或者添加语句插入到应用的输入参数中，再在后台Sql服务器上解析执行进行的攻击。
二、Web程序三层架构 三层架构：界面层、业务逻辑层、数据访问层
区分层次目的：高内聚低耦合的思想
由数据库驱动的Web应用程序依从三层架构的思想也分为了三层：
表示层：访问http://www.xxxx.com，呈现HTML内容
业务逻辑层（领域层）：加载、编译执行index.php，发送HTML文件
数据访问层（存储层）：执行SQL语句，返回数据
三层架构是一种线性关系。
三、Sql 注入漏洞详解 Sql注入产生的原因及威胁 刚刚讲过当我们访问动态网页时, Web 服务器会向数据访问层发起 Sql 查询请求，如果权限验证通过就会执行 Sql 语句。 这种网站内部直接发送的Sql请求一般不会有危险，但实际情况是很多时候需要结合用户的输入数据动态构造 Sql 语句，如果用户输入的数据被构造成恶意 Sql 代码，Web 应用又未对动态构造的 Sql 语句使用的参数进行审查，则会带来意想不到的危险。
Sql 注入带来的威胁主要有如下几点
 猜解后台数据库，这是利用最多的方式，盗取网站的敏感信息。 绕过认证，列如绕过验证登录网站后台。 注入可以借助数据库的存储过程进行提权等操作  查看具体实例
四、判断Sql注入点 通常情况下，可能存在 Sql 注入漏洞的 Url 是类似这种形式 ：http://xxx.xxx.xxx/abcd.php?id=XX 对 Sql 注入的判断，主要有两个方面：
 判断该带参数的 Url 是否存在 Sql 注入？ 如果存在 Sql 注入，那么属于哪种 Sql 注入？  可能存在 Sql 注入攻击的 ASP/PHP/JSP 动态网页中，一个动态网页中可能只有一个参数，有时可能有多个参数。有时是整型参数，有时是字符串型参数，不能一概而论。总之只要是带有参数的 动态网页且此网页访问了数据库，那么就有可能存在 Sql 注入。如果程序员没有足够的安全意识，没有进行必要的字符过滤，存在SQL注入的可能性就非常大。
4.1 判断是否存在Sql注入漏洞 经典：单引号判断法</description>
    </item>
    
  </channel>
</rss>