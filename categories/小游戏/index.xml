<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>小游戏 on しずか</title>
    <link>https://chenwenwenwen.github.io/categories/%E5%B0%8F%E6%B8%B8%E6%88%8F/</link>
    <description>Recent content in 小游戏 on しずか</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hans</language>
    <lastBuildDate>Wed, 15 Jul 2020 10:44:00 +0800</lastBuildDate>
    
	<atom:link href="https://chenwenwenwen.github.io/categories/%E5%B0%8F%E6%B8%B8%E6%88%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2048游戏制作</title>
      <link>https://chenwenwenwen.github.io/2020/2048/</link>
      <pubDate>Wed, 15 Jul 2020 10:44:00 +0800</pubDate>
      
      <guid>https://chenwenwenwen.github.io/2020/2048/</guid>
      <description>游戏实现：开始游戏
一、游戏架构设定  UI-HTML、CSS 游戏逻辑-Js、Jquery 游戏数据 动画效果逻辑-js/jquery 支撑逻辑-js  项目目录 css-2048.cssjs-jquery-1.8.2.min.js	main2048.js	showanimation2048.js	support2048.jsindex.html游戏基础设定 通过键盘上下左右进行移动，当界面不可再移动的时候设定为Game over
二、构建页面元素 ​	头部显示游戏名、重新开始游戏按钮、分数
&amp;lt;header&amp;gt;	&amp;lt;h1&amp;gt;2048&amp;lt;/h1&amp;gt;	&amp;lt;a href=&amp;#34;javascript:newgame();&amp;#34; id=&amp;#34;newgamebutton&amp;#34;&amp;gt;New Game&amp;lt;/a&amp;gt;	&amp;lt;p&amp;gt;score:&amp;lt;span id=&amp;#34;score&amp;#34;&amp;gt;0&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;/header&amp;gt;​	整个格子宽高总共为500px，每个小格子宽高为100px，每个小格子之间的间隔20px。
&amp;lt;!--小格子--&amp;gt;	&amp;lt;div id=&amp;#34;grid-container&amp;#34;&amp;gt;	//一行为例	&amp;lt;div class=&amp;#34;grid-cell&amp;#34; id=&amp;#34;grid-cell-0-0&amp;#34;&amp;gt;&amp;lt;/div&amp;gt;	&amp;lt;div class=&amp;#34;grid-cell&amp;#34; id=&amp;#34;grid-cell-0-1&amp;#34;&amp;gt;&amp;lt;/div&amp;gt;	&amp;lt;div class=&amp;#34;grid-cell&amp;#34; id=&amp;#34;grid-cell-0-2&amp;#34;&amp;gt;&amp;lt;/div&amp;gt;	&amp;lt;div class=&amp;#34;grid-cell&amp;#34; id=&amp;#34;grid-cell-0-3&amp;#34;&amp;gt;&amp;lt;/div&amp;gt;	&amp;lt;/div&amp;gt;三、游戏逻辑 board 就相当于全部小格子的二维数组 ，存放的是格子的内容
hasConflicted记录是否发生过一个add
board 、hasConflicted数组初始化为一维数组&amp;mdash;&amp;mdash;-&amp;gt;在初始化的时候需要变成二维数组
var board = new Array()var score = 0 //分数初始化为0var hasConflicted = new Array();把移动的模块设置为number-cell-i-jde 小格子，把文字内容存放在board数组，通过updateBoardView()函数去控制显示到number-cell格子
四、游戏逻辑交互 以向左移动为例子
首先判断能否向左移动：&amp;mdash;&amp;gt;函数canMoveLeft()实现判断
 ​	左边是否没有数字？ ​	左边的内容是否和自己相等，能否合并？  如果可以移动，则需要对左侧的位置进行判断，是否可以为落脚点？&amp;mdash;&amp;gt;函数MoveLeft()实现、</description>
    </item>
    
  </channel>
</rss>