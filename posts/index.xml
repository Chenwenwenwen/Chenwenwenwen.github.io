<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on しずか</title>
    <link>https://chenwenwenwen.github.io/posts/</link>
    <description>Recent content in Posts on しずか</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hans</language>
    <lastBuildDate>Fri, 03 Jul 2020 16:28:52 +0800</lastBuildDate>
    
	<atom:link href="https://chenwenwenwen.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LeaveIt主题功能优化</title>
      <link>https://chenwenwenwen.github.io/2020/leaveit%E6%B7%BB%E5%8A%A0%E5%8A%9F%E8%83%BD/</link>
      <pubDate>Fri, 03 Jul 2020 16:28:52 +0800</pubDate>
      
      <guid>https://chenwenwenwen.github.io/2020/leaveit%E6%B7%BB%E5%8A%A0%E5%8A%9F%E8%83%BD/</guid>
      <description>一、评论系统 准备工作 LeaveIt主题没有提供评论的功能，因此需要自己写，这里我用的是 Valine 第三方评论系统。必须先注册和创建应用，选着开发版就好。
快速开始 | Valine
应用创建完后，可以去设置里应用KEY看到 APPID、APPKEY 。
Step1 配置Valine 在 config.toml 中加入以下代码（Valine基本配置）
# Valine. # You can get your appid and appkey from https://leancloud.cn # more info please open https://valine.js.org [params.valine] enable = true appId = &amp;#39;XXXXXXXXXXXXXXXXXXXXXXXXXXX&amp;#39; appKey = &amp;#39;XXXXXXXXXXXXXXXXXXXXXXXXXXX&amp;#39; notify = false # mail notifier , https://github.com/xCss/Valine/wiki verify = false # Verification code avatar = &amp;#39;mm&amp;#39; placeholder = &amp;#39;说点什么吧...&amp;#39; visitor = trueappId和appKey换成自己的，详细的配置信息请阅读 配置项 | Valine</description>
    </item>
    
    <item>
      <title>Sql注入基础原理</title>
      <link>https://chenwenwenwen.github.io/2020/sql%E6%B3%A8%E5%85%A5/</link>
      <pubDate>Fri, 03 Jul 2020 10:27:49 +0800</pubDate>
      
      <guid>https://chenwenwenwen.github.io/2020/sql%E6%B3%A8%E5%85%A5/</guid>
      <description>一、Sql注入简介 ​	Sql注入攻击是通过恶意的Sql查询或者添加语句插入到应用的输入参数中，再在后台Sql服务器上解析执行进行的攻击。
二、Web程序三层架构 三层架构：界面层、业务逻辑层、数据访问层
区分层次目的：高内聚低耦合的思想
由数据库驱动的Web应用程序依从三层架构的思想也分为了三层：
表示层：访问http://www.xxxx.com，呈现HTML内容
业务逻辑层（领域层）：加载、编译执行index.php，发送HTML文件
数据访问层（存储层）：执行SQL语句，返回数据
三层架构是一种线性关系。
三、Sql 注入漏洞详解 Sql注入产生的原因及威胁 刚刚讲过当我们访问动态网页时, Web 服务器会向数据访问层发起 Sql 查询请求，如果权限验证通过就会执行 Sql 语句。 这种网站内部直接发送的Sql请求一般不会有危险，但实际情况是很多时候需要结合用户的输入数据动态构造 Sql 语句，如果用户输入的数据被构造成恶意 Sql 代码，Web 应用又未对动态构造的 Sql 语句使用的参数进行审查，则会带来意想不到的危险。
Sql 注入带来的威胁主要有如下几点
 猜解后台数据库，这是利用最多的方式，盗取网站的敏感信息。 绕过认证，列如绕过验证登录网站后台。 注入可以借助数据库的存储过程进行提权等操作  查看具体实例
四、判断Sql注入点 通常情况下，可能存在 Sql 注入漏洞的 Url 是类似这种形式 ：http://xxx.xxx.xxx/abcd.php?id=XX 对 Sql 注入的判断，主要有两个方面：
 判断该带参数的 Url 是否存在 Sql 注入？ 如果存在 Sql 注入，那么属于哪种 Sql 注入？  可能存在 Sql 注入攻击的 ASP/PHP/JSP 动态网页中，一个动态网页中可能只有一个参数，有时可能有多个参数。有时是整型参数，有时是字符串型参数，不能一概而论。总之只要是带有参数的 动态网页且此网页访问了数据库，那么就有可能存在 Sql 注入。如果程序员没有足够的安全意识，没有进行必要的字符过滤，存在SQL注入的可能性就非常大。
4.1 判断是否存在Sql注入漏洞 经典：单引号判断法</description>
    </item>
    
    <item>
      <title>在非系统盘安装 WSL</title>
      <link>https://chenwenwenwen.github.io/2020/wsl/</link>
      <pubDate>Thu, 18 Jun 2020 10:51:03 +0800</pubDate>
      
      <guid>https://chenwenwenwen.github.io/2020/wsl/</guid>
      <description>在非系统盘安装 WSL 首先在系统中配置
 windows设置 &amp;ndash; 系统 &amp;ndash; 储存 &amp;ndash; 更改新内容的保存位置 &amp;ndash; 新的应用将保持到：非系统盘  然后以管理员身份运行 Windows PowerShell ， 推荐安装 Windows Terminal (Preview) 更加美观
#启动虚拟机平台 Enable-WindowsOptionalFeature -Online -FeatureName VirtualMachinePlatform #启用Linux子系统 Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux #创建目录 New-Item D:\WSL -ItemType Directory Set-Location D:\WSL #下载安装程序，这个过程比较慢，要多等一段时间 //直接下载安装包更快 Invoke-WebRequest -Uri https://aka.ms/wsl-ubuntu-1604 -OutFile Ubuntu.appx -UseBasicParsing Rename-Item .\Ubuntu.appx Ubuntu1604.zip Expand-Archive .\Ubuntu1804.zip -Verbose #运行程序 cd Ubuntu1804 .\ubuntu1804.exe 检查是否有打开一下Windows功能
按照上面的步骤完成，就可以轻松吃上 WSL 了 ，不过如果安装过程出错呢？看看下面如何重装吧
如何重装   直接把 WSL 整个目录删除
  通过 wslconfig /l 查看版本</description>
    </item>
    
    <item>
      <title>使用nvm管理多版本Node</title>
      <link>https://chenwenwenwen.github.io/2020/nvm/</link>
      <pubDate>Tue, 16 Jun 2020 14:07:01 +0800</pubDate>
      
      <guid>https://chenwenwenwen.github.io/2020/nvm/</guid>
      <description>一、下载nvm github上下载nvm最新版本  nvm-noinstall.zip 是绿色免安装版本，但是使用之前需要配置（推荐） nvm-setup.zip： 这是一个安装包，下载之后点击安装，无需配置就可以使用，很方便  二、安装nvm   nvm-noinstall.zip 下载完成解压在C:\dev\nvm。里面的文件列表如下
  双击install.cmd，直接回车，生成目录settings.txt文件。把这个文件剪切到C:\dev\nvm目录中。
（不存在则新建，新建后的txt文件不要修改其文件编码,使用默认的ANSI格式，否则无法正确解析配置文件中的内容 ）
root: C:\dev\nvm （根据自己情况配置） root:后面一定要有一个空格 path: C:\dev\nodejs （根据自己情况配置）path:后面一定要有一个空格 arch: 64 proxy: none node_mirror: http://npm.taobao.org/mirrors/node/ npm_mirror: https://npm.taobao.org/mirrors/npm/ ​ 注意: root:和path: 后面一定要有一个空格否则在安装node的时候不会安装到nvm文件夹下
  配置环境变量
window+r 输入sysdm.cpl 快捷方式打开系统属性面板，在高级里面找到环境变量，或者在我的电脑右击属性——》高级系统设置——》高级-——》环境变量
NVM_HOME：nvm.exe 所在目录&amp;lt;==&amp;gt; setting**s**.txt中的root值 NVM_SYMLINK：node 快捷方式所在的目录 &amp;lt;==&amp;gt; setting**s**.txt中的root值 PATH中添加%NVM_HOME% 和**;**%NVM_SYMLINK% 验证：打开CMD通过set NVM_HOME和 set NVM_SYMLINK 命令查看环境变量是否配置成功
成功则显示如下：
  在cmd输入nvm 查看nvm详细信息，如果出现详细信息，所以已经安装成功，但是在window10 可能会出现 ‘nvm’ 不是内部或外部命令，也不是可运行的程序或批处理文件。这是cmd的问题，我们可以打开window+r输入powershell打开powershell，powershell可以看作是cmd 的升级版   切换node 版本 nvm list查看版本 nvm use 版本号 （切换到node 版本） node -v 查看版本 （确认安装成功） 在vsCode允许node 环境 1.</description>
    </item>
    
    <item>
      <title>如何使用Hugo搭建个人博客</title>
      <link>https://chenwenwenwen.github.io/2020/hugo/</link>
      <pubDate>Fri, 12 Jun 2020 11:07:48 +0800</pubDate>
      
      <guid>https://chenwenwenwen.github.io/2020/hugo/</guid>
      <description>Hugo是什么？ Hugo是一个用Go语言编写的静态网站生成器，Hugo一般只需要几秒钟就能生成一个网站（每页少于1毫秒），被称为”世界上最快的网站构建框架“，是最热门的静态网站生成器之一，被广泛采用。
Hugo 官方主页
如何使用Hugo搭建个人博客 Step1：安装Hugo 1.下载Hugo安装
2.下载到安装包，解压后放到x:\xxx\hugo
3.添加环境变量：点击计算机图标-右键-属性-高级系统设置-系统变量-path-添加
4.重启终端，运行 hugo version 。安装成功就能查看到版本号
Step2：创建一个新的Hugo网页 1.进入Hugo官网
2.点击Quick Start ，Step1操作前面已完成，直接开始Step2
3.复制Step2的代码，在cmd上运行。注意这里要把”quickstart“改成“github用户名.github.io-creater!”(这样操作的好处是，上传到GitHub上后方便标识。)
hugo new site quickstart 上面的代码将在名为的文件夹中创建一个新的Hugo网站 quickstart
Step3：添加主题 这里以主题ananke为例：
cd quickstart //记得将quickstart更改为上一步的创建名 git init git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke 将主题添加到站点配置中：
echo &amp;#39;theme = &amp;#34;ananke&amp;#34;&amp;#39; &amp;gt;&amp;gt; config.toml Step4：新建一篇文章 posts:放置文章的文件夹
hugo new posts/test.md 可以用文本文件或 Markdown 编辑器打开文件 post/test.md ，并增加点内容。
PS：默认创建的是草稿类型，需要将draft值改为false才能看到页面
推送新文章 在网站的主目录下
hexo new posts/文章名.md hugo --theme=主题名称 cd public git add -A git commit -m &amp;#34;描述内容&amp;#34; git push -u origin master Step5：开启Hugo服务器 hugo server -D 浏览至http：// localhost：1313 /的新站点。</description>
    </item>
    
  </channel>
</rss>